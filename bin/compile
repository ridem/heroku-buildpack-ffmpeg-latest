#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

header() {
  echo "" || true
  echo "-----> $*" || true
}

output() {
  while IFS= read -r LINE; do
    # do not indent headers that are being piped through the output
    if [[ "$LINE" =~ ^-----\>.* ]]; then
      echo "$LINE" || true
    else
      echo "       $LINE" || true
    fi
  done
}

header "Installing ffmpeg"

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

VENDOR_FFMPEG_DIR="vendor/ffmpeg"
FFMPEG_ARCHIVE_NAME="ffmpeg.tar.xz"
CACHED_FFMPEG_ARCHIVE_PATH="$CACHE_DIR/$FFMPEG_ARCHIVE_NAME"

cd $BUILD_DIR
mkdir -p $VENDOR_FFMPEG_DIR
cd $VENDOR_FFMPEG_DIR

if [[ -e $ENV_DIR/FFMPEG_DOWNLOAD_URL ]]; then
  FFMPEG_DOWNLOAD_URL=$(cat $ENV_DIR/FFMPEG_DOWNLOAD_URL)
else
  echo "Variable FFMPEG_DOWNLOAD_URL isn't set, using default value" | output
  FFMPEG_DOWNLOAD_URL="https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz"
fi

echo "Downloading $FFMPEG_DOWNLOAD_URL" | output

code=$(curl "$FFMPEG_DOWNLOAD_URL" -L  --silent --show-error --fail --retry 5 --retry-max-time 15 -o $FFMPEG_ARCHIVE_NAME --write-out "%{http_code}")

if [ "$code" != "200" ]; then

  if [[ -e $CACHED_FFMPEG_ARCHIVE_PATH ]]; then
    cp $CACHED_FFMPEG_ARCHIVE_PATH .
    echo "Couldn't download ffmpeg, using the latest download from the cache" | output
  else
    echo "Unable to download ffmpeg" | output && exit 1
  fi
  
else
  cp $FFMPEG_ARCHIVE_NAME $CACHED_FFMPEG_ARCHIVE_PATH
fi

echo "Unpacking the archive" | output

tar xJf $FFMPEG_ARCHIVE_NAME --strip-components=1

if [ $? -ne 0 ]; then
  echo "Failed to unpack" | output && exit 1
fi

rm $FFMPEG_ARCHIVE_NAME

PROFILE_DIR=$BUILD_DIR/.profile.d
mkdir -p $PROFILE_DIR
echo "export PATH="\$PATH:\${HOME}/$VENDOR_FFMPEG_DIR"" >> $PROFILE_DIR/ffmpeg.sh

echo "Installation successful" | output